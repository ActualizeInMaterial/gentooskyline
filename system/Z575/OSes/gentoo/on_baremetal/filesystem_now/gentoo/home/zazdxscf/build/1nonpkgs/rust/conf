#!/bin/bash

set -e
set -x

pushd rust

declare -ar args=(
--prefix="/home/zazdxscf/build/1nonpkgs/rust/usr/local"
#--disable-rpath
--enable-rpath #so you don't have to prefix the rustc exe with LD_LIBRARY_PATH to avoid failure to load its .so libs
#--disable-verify-install #nolonger exists
--enable-manage-submodules

--disable-clang
#--enable-clang

--enable-ccache
--enable-dist-host-only
--disable-valgrind
--disable-helgrind
--disable-valgrind-rpass
--python="/usr/bin/python2"

#--disable-optimize
#--disable-optimize-cxx
--enable-optimize
--enable-optimize-cxx
#--enable-optimize-llvm  #I didn't test the disable one here!
--disable-optimize-llvm  #disable this so llvm has debug symbols! FIXME: find a way to keep optimize too!

#--disable-debug
--enable-debug #//fail: https://github.com/rust-lang/rust/issues/28947 ACTUALLY this issue still happens even without --enable-debug(and with --disable-debug!) because --enable-debug implies --enable-debuginfo and the latter was also manually specified below.
#--disable-debuginfo #this doesn't cause that issue:
--enable-debuginfo #yep this one causes that issue: https://github.com/rust-lang/rust/issues/28947 in other words, this: ./configure --disable-debug --enable-debuginfo --enable-optimize --llvm-root=/usr && make -j1 -- all NO_REBUILD=1 TIME_PASSES=1 TIME_LLVM_PASSES=1 'RUSTFLAGS=--verbose -Z verbose -Z print-link-args -Z debug-llvm '   got fixed
#--disable-debug-assertions
--enable-debug-assertions
#--disable-debuginfo-tests
--enable-debuginfo-tests
--enable-llvm-assertions
#--disable-llvm-assertions
#--disable-debug-jemalloc
--enable-debug-jemalloc

--disable-local-rust
#--enable-local-rust
#--local-rust-root="/home/zazdxscf/build/1nonpkgs/rust/tmp_stage0/x86_64-unknown-linux-gnu" #this is a stage0 compiled(not the static one from bin! that's the downloaded one) it's the one from /home/zazdxscf/build/1nonpkgs/rust/rust/x86_64-unknown-linux-gnu/stage0/lib/rustlib/ which has this folder there: x86_64-unknown-linux-gnu/  that I moved into /tmp/1/
#^ with /usr it fails with not finding crate for std - so can't readily use the gentoo-installed rust
#--enable-fast-make

#--disable-llvm-version-check
#--llvm-root=/usr  #will fail in make (at some Bool step of what seems to be a configure step) this might fix it: https://github.com/rust-lang/rust/pull/29272  i need to test!



#--disable-libcpp
#--disable-jemalloc
--release-channel=dev

#without one or more of the following you get rustc trying to build for powerpc too for example (and others)
--host=x86_64-unknown-linux-gnu
--target=x86_64-unknown-linux-gnu
--build=x86_64-unknown-linux-gnu

)


time ./configure "${args[@]}"

set +x
#make docs NO_REBUILD=1

popd

echo "!! Done."

