#!/bin/bash

set -e
set -x

pushd rust

declare -ar args=(
--prefix="/home/zazdxscf/build/1nonpkgs/rust/usr/local"
--disable-rpath
#--disable-verify-install #nolonger exists
--enable-manage-submodules
--disable-clang
--enable-ccache
--enable-dist-host-only
--disable-valgrind
--disable-helgrind
--disable-valgrind-rpass
--python="/usr/bin/python2"

--enable-optimize
--enable-optimize-cxx
--enable-optimize-llvm

#--disable-debug
--enable-debug #fail: https://github.com/rust-lang/rust/issues/28947 ACTUALLY this issue still happens even without --enable-debug(and with --disable-debug!) because --enable-debug implies --enable-debuginfo and the latter was also manually specified below.
--disable-debuginfo #this doesn't cause that issue:
#--enable-debuginfo #yep this one causes that issue: https://github.com/rust-lang/rust/issues/28947 in other words, this: ./configure --disable-debug --enable-debuginfo --enable-optimize --llvm-root=/usr && make -j1 -- all NO_REBUILD=1 TIME_PASSES=1 TIME_LLVM_PASSES=1 'RUSTFLAGS=--verbose -Z verbose -Z print-link-args -Z debug-llvm '
--enable-debug-assertions
--enable-debuginfo-tests
--enable-llvm-assertions
--enable-debug-jemalloc

--disable-local-rust
#--enable-local-rust
#--local-rust-root="/usr" #fails with not finding crate for std
#--enable-fast-make

--disable-llvm-version-check
--llvm-root=/usr  #will fail in make (at some Bool step of what seems to be a configure step)



#--disable-libcpp
#--disable-jemalloc
)


time ./configure "${args[@]}"

set +x
#make docs NO_REBUILD=1

popd

echo "!! Done."

