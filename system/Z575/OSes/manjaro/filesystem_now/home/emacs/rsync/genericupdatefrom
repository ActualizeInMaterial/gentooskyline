#!/bin/bash

remoterootdir="$@"
if test -z "$remoterootdir"; then
  echo "bad param: '${remoterootdir}'"
  exit 2
fi

basedir='/home/emacs/rsync'
#where='/tmp/gentoo/'
#XXX: other scrips depend on the name of these dirs being the same (names: gentoo & rsync-backed)
where="${basedir}/gentoo/" #where to update (aka destination)
backupdirfordeletions="${basedir}/rsync-backed/" #dir where deleted/modified files will be moved from $where before being updated! (any new files added in $where that didn't exist in the .list files and at source will be deleted and thus moved here; see the red colored output for these)
mkdir -p "$where"

declare -a -r -t -x EXTRA_RSYNCY_PARAMS_arr=(

# all paths here are relative to the source dir (which is passed to rsync on cmdline, see --files-from in man rsync for exact explanation on how)
--files-from='/home/emacs/rsync/rsync_filesfrom.list'
#^ you cannot put comments inside this .list file!!

#--exclude='*.tmp *~ *.swp'
#^ this has no effect now, it only has effect from in --exclude-from list!

#commented lines work inside these .list files though:
#--include-from='/home/emacs/rsync/rsync_include.list' #useless when --files-from is used!
--exclude-from='/home/emacs/rsync/rsync_exclude.list'

--delete-excluded
--backup
#--backup-dir='/home/emacs/rsync/rsync-backed/'
--backup-dir="${backupdirfordeletions}"

--update  #this was already implied in rsyncy, but just to be extra sure!
--delete-after #implies --delete
)
#XXX: can't export arrays, great!
#declare -x +a +A +i EXTRA_RSYNCY_PARAMS="${EXTRA_RSYNCY_PARAMS_arr[@]}"
#export EXTRA_RSYNCY_PARAMS="${EXTRA_RSYNCY_PARAMS_arr[@]}" #making it non-array then.
#export FOO=1  #this obv. works
#XXX: impossible to pass these via array or string var! in the latter case, this gets split into two params: --exclude='*.tmp *~'
#so I have to move it 

  mkdir -p "${where}/"
#  echo "${EXTRA_RSYNCY_PARAMS[@]}"
  rsyncy 'ssh -v -p 8822 -i /home/emacs/.ssh/id_ed25519 -l root' "127.0.0.111:${remoterootdir}/" "${where}/" "${EXTRA_RSYNCY_PARAMS_arr[@]}"



#------
echo "deleted/modified files requiring your attention, are:"
#du "${backupdirfordeletions}" | egrep -v '^0'$'\t'
#ignored 0 sized folders (even though empty files may have been deleted/moved there)

sudo find "${backupdirfordeletions}" -type f

#------


